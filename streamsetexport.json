{
  "pipelineConfig" : {
    "schemaVersion" : 1,
    "version" : 5,
    "uuid" : "aec40e80-791c-48ae-9a23-4bf6f59ec74a",
    "description" : "",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.65}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "STOP_PIPELINE"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget::1"
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 1024
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:PermSize=128M -XX:MaxPermSize=256M -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : "3",
        "timeout" : 10000,
        "writeToDestinations" : false,
        "showHeader" : true,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "stages" : [ {
      "instanceName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource_1",
      "library" : "streamsets-datacollector-cdh_kafka_1_3-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource",
      "stageVersion" : "4",
      "configuration" : [ {
        "name" : "kafkaConfigBean.dataFormatConfig.charset",
        "value" : "UTF-8"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.removeCtrlChars",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.filePatternInArchive",
        "value" : "*"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.csvSkipStartLines",
        "value" : 0
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xmlRecordElement",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.retainOriginalLine",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.grokPatternDefinition",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.onParseError",
        "value" : "ERROR"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.schemaInMessage",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.avroSchema",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.protoDescriptorFile",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.messageType",
        "value" : null
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.isDelimited",
        "value" : true
      }, {
        "name" : "kafkaConfigBean.dataFormatConfig.binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "kafkaConfigBean.dataFormat",
        "value" : "JSON"
      }, {
        "name" : "kafkaConfigBean.metadataBrokerList",
        "value" : "kafkahost:9092"
      }, {
        "name" : "kafkaConfigBean.zookeeperConnect",
        "value" : "kafkahost:2181/kafka"
      }, {
        "name" : "kafkaConfigBean.consumerGroup",
        "value" : "streamsetsDataCollector"
      }, {
        "name" : "kafkaConfigBean.topic",
        "value" : "expanded_sms3"
      }, {
        "name" : "kafkaConfigBean.produceSingleRecordPerMessage",
        "value" : false
      }, {
        "name" : "kafkaConfigBean.maxBatchSize",
        "value" : 1000
      }, {
        "name" : "kafkaConfigBean.maxWaitTime",
        "value" : 2000
      }, {
        "name" : "kafkaConfigBean.kafkaConsumerConfigs",
        "value" : [ ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 169,
        "stageType" : "SOURCE",
        "rawSource" : {
          "configuration" : [ {
            "name" : "brokerHost",
            "value" : "kafkahost"
          }, {
            "name" : "brokerPort",
            "value" : 9092
          }, {
            "name" : "topic",
            "value" : "expanded_sms2"
          }, {
            "name" : "partition",
            "value" : 0
          }, {
            "name" : "maxWaitTime",
            "value" : 1000
          } ]
        },
        "description" : "",
        "label" : "Kafka Consumer 1",
        "xPos" : 51
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource_1OutputLane14640428839010" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor_1",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "processingMode",
        "value" : "RECORD"
      }, {
        "name" : "script",
        "value" : "/**\n * Sample JavaScript code\n *\n * Available Objects:\n *\n *  records: an array of records to process, depending on the JavaScript processor\n *           processing mode it may have 1 record or all the records in the batch.\n *\n *  state: a dict that is preserved between invocations of this script.\n *        Useful for caching bits of data e.g. counters.\n *\n *  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n *                               loglevel is any log4j level: e.g. info, error, warn, trace.\n *\n *  output.write(record): writes a record to processor output\n *\n *  error.write(record, message): sends a record to error\n *\n */\n\nfor (var i = 0; i < records.length; i++) {\n    try {\n        function guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n                s4() + '-' + s4() + s4() + s4();\n        }\n\n        var record = records[i].value;\n  \n        // Change record root field value to a STRING value\n        //records[i].value = 'Hello ' + i;\n        var current_time = new Date();\n        record['_ts'] = current_time.getTime();\n        // record['_id'] = record.messageId;\n        record['_id'] = guid();\n        record['fruit'] = record.text;\n        record['phone_num'] = record.msisdn;\n        record['keyword'] = record.keyword;\n        //record['message_date'] = new Date(record.timestamp).getTime();\n        record['message_date'] = current_time.getTime();\n        record['price'] = 500;\n        \n\n\n        // Change record root field value to a MAP value and create an entry\n        //records[i].value = { V : 'Hello' };\n\n        // Access a MAP entry\n        //records[i].value.X = records[i].value['V'] + ' World';\n\n        // Modify a MAP entry\n        //records[i].value.V = 5;\n\n        // Create an ARRAY entry\n        //records[i].value.A = ['Element 1', 'Element 2'];\n\n        // Access a Array entry\n        //records[i].value.B = records[i].value['A'][0];\n\n        // Modify an existing ARRAY entry\n        //records[i].value.A[0] = 100;\n\n        // Write record to procesor output\n        output.write(records[i]);\n    } catch (e) {\n        // Send record to error\n        error.write(records[i], e);\n    }\n}\n\n"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "JavaScript Evaluator 1",
        "xPos" : 272,
        "yPos" : 168,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource_1OutputLane14640428839010" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor_1OutputLane14640455764610" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "fieldMaskConfigs",
        "value" : [ {
          "fields" : [ "/phone_num" ],
          "maskType" : "CUSTOM",
          "regex" : "(.*)",
          "groupsToShow" : "1",
          "mask" : "####xxx####"
        } ]
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Field Masker 1",
        "xPos" : 492,
        "yPos" : 168,
        "stageType" : "PROCESSOR"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_javascript_JavaScriptDProcessor_1OutputLane14640455764610" ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1OutputLane14641182048460" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_destination_kudu_KuduDTarget_1",
      "library" : "streamsets-datacollector-apache-kudu-0_7-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_kudu_KuduDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "kuduMaster",
        "value" : "kudumaster:7051"
      }, {
        "name" : "tableName",
        "value" : "strata_fruits_p"
      }, {
        "name" : "fieldMappingConfigs",
        "value" : [ {
          "field" : "/_id",
          "columnName" : "_id"
        }, {
          "field" : "/_ts",
          "columnName" : "_ts"
        }, {
          "field" : "/fruit",
          "columnName" : "fruit"
        }, {
          "field" : "/keyword",
          "columnName" : "keyword"
        }, {
          "field" : "/phone_num",
          "columnName" : "phone_num"
        }, {
          "field" : "/message_date",
          "columnName" : "message_date"
        }, {
          "field" : "/price",
          "columnName" : "price"
        }, {
          "field" : "/country_code",
          "columnName" : "country_code"
        }, {
          "field" : "/country_area_code",
          "columnName" : "country_area_code"
        } ]
      }, {
        "name" : "consistencyMode",
        "value" : "CLIENT_PROPAGATED"
      }, {
        "name" : "operationTimeout",
        "value" : 10000
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Kudu 1",
        "xPos" : 712,
        "yPos" : 168,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor_1OutputLane14641182048460" ],
      "outputLanes" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Error Records - Discard",
        "xPos" : 713,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ]
    },
    "info" : {
      "name" : "Strata Kafka To Kudu Phone",
      "description" : "",
      "created" : 1464359217533,
      "lastModified" : 1464371775854,
      "creator" : "admin",
      "lastModifier" : "admin",
      "lastRev" : "0",
      "uuid" : "aec40e80-791c-48ae-9a23-4bf6f59ec74a",
      "valid" : true
    },
    "metadata" : null,
    "statsAggregatorStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget_StatsAggregatorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Stats Aggregator - Discard",
        "xPos" : 280,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ]
    },
    "previewable" : true,
    "valid" : true,
    "issues" : {
      "stageIssues" : { },
      "pipelineIssues" : [ ],
      "issueCount" : 0
    }
  },
  "pipelineRules" : {
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Bad Records",
      "metricId" : "pipeline.batchErrorRecords.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1464042525223,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Error Messages",
      "metricId" : "pipeline.batchErrorMessages.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1464042525223,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1464042525223,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1464042525223,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1464042525223,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "emailIds" : [ ],
    "uuid" : "56c3bca3-00a8-4aad-bec9-729b2c669b75",
    "ruleIssues" : [ ]
  },
  "libraryDefinitions" : null
}